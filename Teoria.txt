Ryan dahl (creador de node js ).
PRIMS.JS: Trozos de codigo incrustado en web.
Revisar canvas de javascript (juegos)
------------------------------------------------------> DEV TOOLS: <----------------------------------------------------------

Windows: ctrl + shift + I 
Mac: cmd + shift + I

    ESC : Te abre la consola donde estes.
    console.table() Te hace una tabla de los datos de la consola

Para ver la propiedad de un componente por consola : $0."Propiedad que quieres ver"
Para buscacr elementos por consola $$("Nombre del elemento que quieres buscar")
LIGTH HOUSE: Da informes sobre todas las areas de la web (performance, seo, buenas practicas, etc)

CMD + SHIFT + P buscar un archivo en el source de la consola.

SQOOSH.app: Herramienta para reducir peso de imagenes.

RENDERIZAR: Mostrar una vista.

--------------------------------------------> SIGNIFICADOS API / API REST: <----------------------------------------------------

API: Documentación
API REST: Servicio al que se le hace peticiones 
ENDPOINT: URL donde se ataca

JSON VIEWER extensión o pagina online de chrome para ver JSON

------------------------------------------------> AGREGAR JAVASCRIPT A HTML <---------------------------------------------------

JAVASCRIPT EN LINEA: Etiqueta <script></script> dentro del body o head del archivo html. Ejemplo: (/EJERCICIO_1/index.html)
JAVASCRIPT EN RUTA O ARCHIVO ENLAZADO: A la etiqueta <script></script> se le agrega un atributo src="LinkDelArchivoJavscript.js" y todo el codigo js irá dentro de LinkDelArchivoJavscript.js

Cuando usarlo:
    - Head se randeriza antes de la pagina.
    - body se randeriza mientras se carga la página.
    - Antes del body se randeriza despues de la pagina web (FORMA DE PREFERENCIA)

Se pueden importar elementos, funciones variables en vanilla con export en el archivo a exportar e importar en el archivo a usar.

------------------------------------------------> VARIABLES JAVASCRIPT <-------------------------------------------------------

Declaramos una variable pero no se le da valor: 
    let x;
Declaramos una variable pero si se le da valor:
    let x = 10;

VAR: Es la forma antigua de crear variables, ejemplo: (scopeGlobal.js)

LET: Puede cambiar el valor.
CONST: tiene un valor que no puede ser modificado.

TIPOS DE NOMBRES DE VARIABLES: snake_case , kebab-case , camelCase , PascalCase , dote.case

------------------------------------------------> TIPOS DE DATOS JAVASCRIPT <-------------------------------------------------------

DATOS PRIMITIVOS: Es un dato que no es un objeto y no tiene métodos.
String, Number, Bigint, Boolean, undefined y Symbol

   - String: Cadena de texto se peude guardar en 'hola' , "hola" , `hola`.
     

------------------------------------------------> OBJETOS JAVASCRIPT <-------------------------------------------------------------

Maneras de crear un objeto:

1    const objeto = {
        propiedad : Valor
     }

2    const objeto = new Object();

3    const objeto = {};

Se pueden agregar propiedades accediendo para la forma de crear el objeto 1: 

    const objeto = new Object()

    objeto.propiedad = Valor;

Se pueden agregar propiedades accediendo para la forma de crear el objeto 2: 

    objeto['Propiedad'] = Valor;


Maneras de acceder a las propiedades de un objeto:

    const objeto = {
            propiedad : Valor
        }

1    console.log(objeto.propiedad);

2    console.log["Propiedad"];

2    const crearVariable = "Propiedad";
        console.log(objeto[crearVariable]);

Como cambiar valores de una propiedad de un objeto:

    const objeto = {
                propiedad : Valor
            }

1    objeto.propiedad = NuevaPropiedad;

2    objeto['propiedad'] = NuevaPropiedad;

3    const variableNueva = NuevaPropiedad;
     const propiedad = variableNueva;

Como borrar propiedades dentro de un objeto:

    const objeto = {
                propiedad : Valor
            }

    delete objeto.propiedad;

    delete disco["propiedad"]

    